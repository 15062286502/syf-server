<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.syfserver.dao.UserDao">
    <select id="userList" parameterType="String" resultType="com.example.syfserver.entity.UserEntity">
        select * from user where name= #{name}
    </select>
    <select id="allUserList"  resultType="int">
        select count(*) from user
    </select>
    <select id="userPageContext"  resultType="com.example.syfserver.entity.UserEntity">
        select * from user limit #{start},#{pageSize}
    </select>
    <select id="queryNameCount"  resultType="int">
        select count(*) from user where name like CONCAT(CONCAT('%', #{queryName}), '%')
    </select>
    <select id="queryNameResult"  resultType="com.example.syfserver.entity.UserEntity">
        SELECT * FROM (SELECT * FROM user where name like CONCAT(CONCAT('%', #{queryName}), '%')) as a limit #{start},#{pageSize}
    </select>
    <delete id="excuteDelete" parameterType="String">
        delete from user where name= #{userName}
    </delete>
    <insert id="addNewUser" parameterType="com.example.syfserver.entity.UserEntity">
        insert into user (name,password,role,realName,address,phone) values (#{addUserEntity.name},md5(#{addUserEntity.password}),#{addUserEntity.role},#{addUserEntity.realName},#{addUserEntity.address},#{addUserEntity.phone})
    </insert>
    <select id="checkAddNewUser" parameterType="com.example.syfserver.entity.UserEntity" resultType="com.example.syfserver.entity.UserEntity">
        select * from user where name = #{addUserEntity.name}
    </select>
    <update id="editUser" parameterType="com.example.syfserver.entity.UserEntity">
        update user set name = #{editUserEntity.name}, password =md5(#{editUserEntity.password}),role = #{editUserEntity.role},realName = #{editUserEntity.realName},address= #{editUserEntity.address},phone = #{editUserEntity.phone} where id = #{editUserEntity.id}
    </update>
    <update id="uploadImage" parameterType="String">
        update user set image = #{url} where name = #{fileName}
    </update>
    <select id="doQueryPercent" resultType="Map" >
        select role,CONCAT(ROUND(count(*)/(select count(1) FROM user)*100,0),'%') as percent
        from user group by role order by percent desc
    </select>

    <select id="doQueryOrderNum" resultType="int">
        SELECT (SELECT COUNT(1) FROM take_in_order) + (SELECT COUNT(1) take_out_order) TOTAL;
    </select>

    <select id="doQueryInDataByDay" resultType="Map">
        select day(createTime) chartDay, count(1) chartNum from take_in_order where createTime >= date(now()) - interval 7 day group by day(createTime)
    </select>

    <select id="doQueryOutDataByDay" resultType="Map">
        select day(createTime) chartDay, count(1) chartNum from take_out_order where createTime >= date(now()) - interval 7 day group by day(createTime)
    </select>

    <select id="doQueryInDataByMonth" resultType="Map">
        select month(createTime) chartDay , count(1) chartNum from take_in_order where createTime >= date(now()) - interval 5 month group by month(createTime)
    </select>

    <select id="doQueryOutDataByMonth" resultType="Map">
        select month(createTime) chartDay , count(1) chartNum from take_out_order where createTime >= date(now()) - interval 5 month group by month(createTime)
    </select>
</mapper>